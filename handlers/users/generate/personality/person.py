from aiogram import types, Router, F
from faker import Faker
from keyboards.callbacks.generate.generate_data import GenerateData
from keyboards.inline.generate.person.person_kb import person_category_keyboard


router = Router()


@router.message(F.text == "üßë –ß–µ–ª–æ–≤–µ–∫")
async def main_person(message: types.Message):
    await message.answer("–í—ã–±–µ—Ä–∏ —Å–Ω–∏–∑—É ‚¨á", reply_markup=person_category_keyboard())


@router.callback_query(GenerateData.filter(F.type == "person"))
async def person_data(call: types.CallbackQuery, fake: Faker):
    await call.answer()
    text = ""
    data = fake.profile()
    text += f"<i>–ò–º—è:</i> <code>{data['name']}</code>"
    text += f"\n<i>–ü–æ—á—Ç–∞:</i> <code>{data['mail']}</code>"
    text += f"\n<i>–ù–∏–∫–Ω–µ–π–º:</i> <code>{data['username']}</code>"
    text += f"\n<i>–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è:</i> <code>{data['birthdate']}</code>"
    text += f"\n<i>–ê–¥—Ä–µ—Å:</i> <code>{data['address']}</code>"
    if "profile" in call.data:
        text += f"\n<i>–ì—Ä—É–ø–ø–∞ –∫—Ä–æ–≤–∏:</i> <code>{data['blood_group']}</code>"
        text += f"\n<i>–ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ:</i> <code>{', '.join([str(float(i)) for i in data['current_location']])}</code>"
        text += f"\n<i>–ü—Ä–æ—Ñ–µ—Å—Å–∏—è:</i> <code>{data['job']}</code>"
        text += f"\n<i>–ö–æ–º–ø–∞–Ω–∏—è:</i> <code>{data['company']}</code>"
    test_person = {
        "profile": f"<b><i>–ü—Ä–æ—Ñ–∏–ª—å:</i></b>\n{text}",
        "simple_prof": f"<b><i>–£–ø—Ä–æ—â—ë–Ω–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å:</i></b>\n{text}",
    }
    msg = ""
    for i in test_person:
        if i in call.data:
            msg += test_person[i]
    await call.message.edit_text(msg, reply_markup=person_category_keyboard())