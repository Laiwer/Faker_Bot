from aiogram import types, Router, F
from faker import Faker
from keyboards.callbacks.generate.generate_data import GenerateData
from keyboards.inline.generate.economy.company_kb import company_category_keyboard


router = Router()


@router.message(F.text == "üè¢ –ö–æ–º–ø–∞–Ω–∏—è")
async def main_company(message: types.Message):
    await message.answer("–í—ã–±–µ—Ä–∏ —Å–Ω–∏–∑—É ‚¨á", reply_markup=company_category_keyboard())


@router.callback_query(GenerateData.filter(F.type == "company"))
async def company_data(call: types.CallbackQuery, fake: Faker):
    await call.answer()
    test_company = {
        "name_company": f"<b><i>–ù–∞–∑–≤–∞–Ω–∏–µ –º–∞–ª–µ–Ω—å–∫–æ–π –∫–æ–º–ø–∞–Ω–∏–∏:</i></b>\n<code>{fake.company()}</code>",
        "large_company": f"<b><i>–ù–∞–∑–≤–∞–Ω–∏–µ –∫—Ä—É–ø–Ω–æ–π –∫–æ–º–ø–∞–Ω–∏–∏:</i></b>\n<code>{fake.large_company()}</code>",
        "catch_phrase": f"<b><i>–°–ª–æ–≥–∞–Ω –∫–æ–º–ø–∞–Ω–∏–∏:</i></b>\n<code>{fake.catch_phrase()}</code>",
        "activity_company": f"<b><i>–î–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∫–æ–º–ø–∞–Ω–∏–∏:</i></b>\n<code>{fake.bs()}</code>",
        "inn": f"<b><i>–ò–ù–ù (–ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–æ–Ω–Ω—ã–π –Ω–æ–º–µ—Ä –Ω–∞–ª–æ–≥–æ–ø–ª–∞—Ç–µ–ª—å—â–∏–∫–∞):</i></b>\n<code>{fake.businesses_inn()}</code>",
        "ogrn": f"<b><i>–û–ì–†–ù (–û—Å–Ω–æ–≤–Ω–æ–π –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π –Ω–æ–º–µ—Ä):</i></b>\n<code>{fake.businesses_ogrn()}</code>",
    }
    msg = ""
    for i in test_company:
        if i in call.data:
            msg += test_company[i]
    await call.message.edit_text(msg, reply_markup=company_category_keyboard())